{"version":3,"sources":["Component/Clock/CountDown.js","Component/Todo/InlineTomato.js","Component/Todo/AddModule.js","Component/Todo/EditBoard.js","Component/Todo/ListModule.js","Component/Todo/Todo.js","Component/Boards/Board.js","Component/Settings.js","Component/Clock/Timer.js","Component/Clock/Clock.js","Component/Navibar.js","Component/About.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CountDown","props","time","useState","counter","setCounter","isActive","setIsActive","isWork","setisWork","Times","setTimes","prevTimes","setPrevTimes","useEffect","interval","setInterval","clearInterval","toggle","restrictMode","minutes","Math","floor","seconds","window","alert","console","log","className","enableTomato","onClick","inlineTomato","ceil","InlineTomato","this","Component","AddModule","addButtonHandler","title","state","updateAddItem","setState","changeHandler","event","target","name","value","htmlFor","type","id","onChange","EditBoard","checkboxTheme","createMuiTheme","palette","primary","main","blue","secondary","green","marks","label","editChange","data","index","switchPropotyChange","propoty","switchEncourageChange","encourage","editSubmit","updateItemStatus","tomatoButton","tomatoTimes","undefined","tomatoNumber","updateTomatoTimes","sliderChanged","valuetext","encourageMode","prevProps","prevState","checked","body","ThemeProvider","theme","Switch","disabled","color","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","max","to","EncourageCheckbox","withStyles","root","Checkbox","ListModule","default","handleCheckboxChange","sendIndex","hideDoneMethod","hideDone","updateHideDone","orderByNameMethod","orderByName","updateOrderByName","orderByPropertyMethod","orderByProperty","updateOrderByProperty","todoData","disableHideDone","every","item","fullData","joker","map","sort","newData","prevData","i","length","j","dataPropoty","filter","dataCommon","dataDonePropoty","dataDoneCommon","updateIndexStatus","rows","row","style","textDecoration","marginLeft","fontWeight","Todo","newItem","newTodoData","deleteDoneItem","Data","confirm","deleteItem","clearAll","inlineTomatoButton","inlineTag","documentData","JSON","parse","localStorage","getItem","setItem","stringify","Board","Settings","switchTheme","restrictModeMethod","restricMode","updateRestricMode","updateInlineTomato","enableTomatoMethod","updateEnableTomato","inlineTomatoMethod","encourageModeMethod","updateEncourageMode","Timer","setSeconds","Clock","Navibar","About","App","documentEnableTomato","documentRestrictMode","documentInlineTomato","documentEncourageMode","path","rel","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3560b41d.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\n// import {Switch} from \"@material-ui/core\";\nimport \"./Clock.css\";\n\n// 因为时间的操作的灵活性较高，所以使用了react hook的写法。 虽然是函数的形式，但是本质上也是个对象\n\nconst CountDown=(props) =>{\n    //初始化番茄钟 休息和工作的秒数的参数\n    let time = 1500;\n    let freeTime = 300;\n    //state中添加 计时器 状态 工作休息判断 工作轮数 上层工作状态的轮数\n    const [counter, setCounter] = useState(time);\n    const [isActive, setIsActive] = useState(false);\n    const [isWork, setisWork] = useState(true);\n    const [Times, setTimes] = useState(props.Times);\n    const [prevTimes,setPrevTimes] = useState(props.Times);\n    \n    //lifecycle函数 将上层本来的Times缓存到prevTimes中\n    useEffect(()=>{\n      setPrevTimes(props.Times);\n    })\n    //lifecycle函数 刷新页面时， 给Times重新赋上层原本的Times的数值\n    useEffect(() => {\n      if(prevTimes !== props.Times){\n        setTimes(props.Times);\n      }\n    })\n    //lifecycle函数 \n    useEffect(() => {\n      let interval = null;\n      if (isActive) {\n        //进行了倒计时的-1操作\n        interval = setInterval(() => {\n          setCounter(counter => {\n            if(counter > 0)\n              return counter -1;\n            else \n              return 0;\n          });\n        }, 1000);\n      } else if (!isActive && counter !== 0) {\n        clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }, [isActive, counter]);\n    \n    //下一个状态转换函数， 进行工作和休息的状态的改变\n    const nextMode = () =>{\n      setIsActive(false);\n      setisWork(!isWork);\n      //根据当前的状态来决定下个倒计时的总的时间数\n      setCounter(isWork?freeTime:time);\n      //两次状态转换相当完成一轮工作， 对Times剩余的轮数进行了赋值\n      setTimes(Times => Times - 0.5);\n    }\n    //暂停操作函数\n    const toggle = () => {\n        setIsActive(!isActive);\n        //在restricmode的时候， 会禁用暂停按钮\n        if(props.restrictMode){\n          setCounter(isWork?time:freeTime);\n          // setIsActive(false);\n        }\n      }\n    //重置操作函数\n    const reset = () => {\n        setCounter(isWork?time:freeTime);\n        setIsActive(false);\n      }\n    \n    //倒计时的分秒显示的转换\n    const minutes = Math.floor(counter / 60);\n    const seconds = counter % 60;\n\n    //lifecycle函数 计时结束进行了提醒\n    useEffect(()=>{\n      if(minutes===0 && seconds===0 && isWork===true)\n        window.alert(\"Well Done, Take a Break :)\")\n    \n      if(minutes===0 && seconds===0 && isWork===false)\n        window.alert(\"Back to Work XD\")\n    })\nconsole.log(Times)\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {minutes}:{seconds}\n      </div> \n      <div className=\"row\">\n      {/* //根据设定的情况显示不同的按钮功能 */}\n      {(props.restrictMode && props.enableTomato) ?\n        <button\n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`}\n            onClick={toggle}>\n                {isActive ? 'Reset' : 'Start'}\n        </button>:\n        <span>\n        <button \n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} \n            onClick={toggle}>\n                {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button \n            className=\"button\" \n            onClick={reset}>\n                Reset\n        </button>\n        </span>\n        }\n        <button\n          className=\"button\"\n          onClick={nextMode}>\n            Next\n        </button>\n      </div>\n      \n      {/* 参考设定的参数来显示剩余工作轮数的提示 */}\n      {props.enableTomato &&\n      <div>\n      {!props.inlineTomato &&\n      <div>\n      {Times<=0?\n      <div className='row'>\n        All Done\n      </div>:\n      <div className=\"row\">\n        {Math.ceil(Times)} Times Left\n      </div>}\n      </div>\n      }\n      </div>}\n      <br/>\n    </div>\n  );\n}\nexport default CountDown\n","import React, { Component } from 'react';\n\nimport CountDown from \"../Clock/CountDown\"\n//inlinetomato组件的component 为了提高可读性 是todo.js的部分的第三部分的component\nclass InlineTomato extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Inline Tomato Clock</h3>\n                    <CountDown\n                        // 将设定参数和工作周期传递给countdown， 重用countdown component\n                        Times = {this.props.Times}\n                        enableTomato={this.props.enableTomato}\n                        restrictMode={this.props.restrictMode}\n                        inlineTomato={this.props.inlineTomato}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default InlineTomato;","import React, { Component } from 'react';\n\n//todo部分的任务添加的component\n\nclass AddModule extends Component {\n    //声明state\n    constructor(props){\n        super(props);\n        this.state={\n            title:\"\",\n        }\n    }\n    //提交之后的赋值函数\n    addButtonHandler=()=>{\n        const {title} = this.state;\n        if(title!=='')\n        //在上一级中添加， 将新的task增加到todo.js的state的todoData数组中\n        this.props.updateAddItem(title);\n        //清除本state的title的内容， 清空输入框的内容\n        this.setState({\n            title:\"\",\n        })\n    }\n    // 输入函数 根据对输入事件进行了解构 name对应的是属性中的name value是输入数值\n    changeHandler =(event)=>{\n        const {name, value} = event.target;\n        this.setState({\n            [name]:value,\n        })\n        \n    }\n\n    render() {\n        // const data = [...this.state.todoData];\n        return (\n            <form>\n                <label htmlFor=\"title\">\n                    <h5>What's Your Plan Today</h5>\n                </label>\n                <input\n                // input组件\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    onChange={this.changeHandler}\n                    value={this.state.title}\n                />\n                <input \n                    type=\"button\" \n                    value=\"Add\"\n                    onClick={this.addButtonHandler}/>\n            </form>\n        );\n    }\n}\n\nexport default AddModule;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {Switch, Slider} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green} from '@material-ui/core/colors';\n//\nclass EditBoard extends Component {\n//state初始化 设定参数的接收\n    constructor(props){\n        super(props);\n        this.state={\n            data:this.props.data,\n            enableTomato:this.props.enableTomato,\n            encourageMode:this.props.encourageMode,\n        }\n\n    }\n//checkbox颜色样式设定\n    checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[700],\n            },\n          secondary: {\n            main: green[300],\n          },\n        },\n      });\n      //slider组件的标尺设定\n      marks = [\n        {\n            value:0,\n            label:0,\n        },\n        {\n            value:5,\n            label:5,\n        }\n    ]\n//lifecycle函数 \n    componentDidMount(){\n        this.setState({\n            data:this.props.data,\n    \n        })\n    }\n    //lifecycle函数 更新数据\n    componentDidUpdate(prevProps,prevState){\n        if(prevProps.data !== this.props.data){\n            this.setState({\n                data:this.props.data,\n            })\n        }\n        \n    }\n    //输入框更新函数\n    editChange=(event)=>{\n        const {name,value} = event.target;\n        let {data} = this.state;\n        data[this.props.index][name] = value;\n        this.setState({\n            data: data,\n        })\n    }\n    //switch改变函数\n    switchPropotyChange = ()=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].propoty = !data[index].propoty\n        this.setState({\n            data: data,\n        })\n    }\n\n    switchEncourageChange = ()=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].encourage = !data[index].encourage\n        this.setState({\n            data: data,\n        })\n    }\n    //内容提交函数   直接更新上层todoData的内容\n    editSubmit=()=>{\n            this.props.updateItemStatus(this.state.data);\n    }\n    //触发番茄模式函数\n    tomatoButton = ()=>{\n        const index = this.props.index;\n        let tomatoTimes =0;\n        if (this.props.data[index]!==undefined)\n            tomatoTimes = this.props.data[index].tomatoNumber;\n        // 向上提交周期Times更新\n            this.props.updateTomatoTimes(tomatoTimes);\n    }\n    //slider选数函数\n    sliderChanged =(event,value)=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].tomatoNumber = value;\n        this.setState({\n            data: data,\n        })\n    }\n    //slider悬浮显示函数\n    valuetext = (value)=> {\n        return `${value} Tomatos`;\n      }\n\n    render() {\n        const index = this.props.index;\n        let data = {};\n        if (this.props.data[index]!==undefined)\n             data = this.props.data[index];\n            //  空值的特殊处理\n        else data = {\n                id:0,\n                checked:false,\n                title:'',\n                tomatoNumber:0,\n                body:\"\",\n                propoty:false,\n                encourage:false,\n        }\n        \n        return (\n            \n            <div className=\"container\">\n                <h3>Edit</h3>\n                <form>\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        value={data.title}\n                        onChange={this.editChange}\n                    /> \n                    {this.props.encourageMode &&\n                    <div>\n                    <label>Done Advance</label>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Switch\n                        disabled={!data.checked}\n                        checked={data.checked?data.encourage:false}\n                        name=\"encourage\"\n                        id=\"encourage\"\n                        color=\"secondary\"\n                        onChange={this.switchEncourageChange}\n                        />\n                    </ThemeProvider>\n                    </div>}\n                    {this.props.enableTomato &&\n                    <div>\n                    <label>Tomato Time {data.tomatoNumber!==0?data.tomatoNumber:null}</label>\n                    <span>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Slider \n                        // slider的数值\n                        value={data.tomatoNumber}\n                        //悬浮显示内容\n                        getAriaValueText={this.valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        valueLabelDisplay=\"auto\"\n                        //步长设定\n                        step={1}\n                        marks={this.marks}\n                        //数字的范围\n                        min={0}\n                        max={5}\n                        name=\"tomatoNumber\"\n                        id='tomatoNumber'\n                        onChange={this.sliderChanged}\n                    />\n                    </ThemeProvider>\n                    {/* inlinetomato模式使用todo.js的timing button禁用此处的 */}\n                    {!this.props.inlineTomato &&\n                    <Link to=\"/clock\">\n                    <button onClick={this.tomatoButton}>\n                        Start Timing\n                    </button>   \n                    </Link>\n                    }\n                    </span>\n                    </div>}\n                    {/* 重要程度设定 */}\n                    <label>Important</label>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Switch\n                        checked={data.propoty}\n                        name=\"propoty\"\n                        id=\"propoty\"\n                        color=\"primary\"\n                        onChange={this.switchPropotyChange}\n                        />\n                    </ThemeProvider>\n                    <label>Description</label>\n                    {/* 文字框属性 */}\n                    <textarea\n                        type=\"text\"\n                        id=\"description\"\n                        name=\"body\"\n                        value={data.body}\n                        onChange={this.editChange}\n                    />   \n                    <span>\n                        {/* 表单提交按钮 */}\n                        <input\n                            type=\"button\"\n                            value=\"Save\"\n                            onClick={this.editSubmit}\n                        />\n                        \n                    </span>\n        \n                </form>\n            </div>     \n        );\n    \n    }\n}\n\nexport default EditBoard;","import React, { Component } from 'react';\nimport { Checkbox ,Switch} from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\n//用函数模式定义了encouragemode下的勾选颜色为绿色的checkbox的样式\nconst EncourageCheckbox = withStyles({\n    root: {\n    //   color: green[400],\n      '&$checked': {\n        color: green[300],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\n//todo.js的第二部分的左边的任务展示区域的component\n\nclass ListModule extends Component {\n    //state的声明\n    constructor(props){\n        super(props);\n        this.state={\n            data:this.props.todoData,\n            disableHideDone: false,\n            index:-1,\n            hideDone: this.props.hideDone,\n            orderByName: this.props.orderByName,\n            orderByProperty: this.props.orderByProperty,\n        }\n    }\n//checkbox的样式颜色的设定\n    checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[300],\n            },\n          secondary: {\n            main: blue[700],\n          },\n          default:{\n            main: green[300],\n          }\n        },\n      });\n      //lifecycle函数 对index进行了数据初始化\n    componentDidMount(){\n        this.setState({\n            index:this.props.index,\n        })\n        const data = this.state.data;\n        let disableHideDone = data.every(item=>item.checked===true);\n        this.setState({\n            disableHideDone: disableHideDone,\n        })\n    }\n    //lifecycle函数 对data进行更新， 同时如果有数据变动， 将数据传回到上一层中\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.todoData!==this.props.todoData){\n            this.setState({\n                data: this.props.todoData,\n            })\n            \n        }\n        if(prevState.data!==this.state.data){\n            const data = this.state.data;\n            let disableHideDone = data.every(item=>item.checked===true);\n            this.setState({\n                disableHideDone: disableHideDone,\n            })\n        }\n        if(prevProps.hideDone!==this.props.hideDone){\n            this.setState({\n                hideDone: this.props.hideDone,\n            })\n        }\n        if(prevProps.orderByProperty!==this.props.orderByProperty){\n            this.setState({\n                orderByProperty: this.props.orderByProperty,\n            })\n        }\n        if(prevProps.orderByName!==this.props.orderByName){\n            this.setState({\n                orderByName: this.props.orderByName,\n            })\n        }\n        if(prevState.hideDone!==this.state.hideDone ||\n            prevState.orderByName!==this.state.orderByName ||\n            prevState.orderByProperty!==this.state.orderByProperty)\n        {\n            let data = [...this.state.data];\n            const fullData = [...this.props.todoData];\n            console.log(\"switch update\")\n            if((prevState.hideDone===true&&this.state.hideDone===false)||\n                (prevState.orderByName===true&&this.state.orderByName===false)||\n                (prevState.orderByProperty===true&&this.state.orderByProperty===false)){\n                    console.log(\"Emmmm, Don't be sad, I am working\")\n                    this.setState({\n                        // data: fullData,\n                        joker:fullData,\n                    })\n                    data = fullData;\n                }\n            \n            if(this.props.orderByName){\n                let title = data.map(item => item.title);\n                title = title.sort();\n                let newData = [];\n                const prevData = [...data];\n                console.log(title,\"Array XD\");\n                for (let i=0;  i < title.length;i++){\n                    console.log(\"I am sure I am looping\")\n                    for(let j=0; j< prevData.length; j++){\n                        console.log(prevData[j],\"hey\")\n                        if(prevData[j].title==title[i]){\n                            newData[i] = prevData[j];\n                        }\n                    }\n                }\n                // let news = prevData.map((item, index)=>{\n                //     for (let i=0; i++; i<title.length){\n                //         if(item.title === title[i]){\n                //             newData = [...newData, item];\n                //             console.log(newData);\n                //         }\n                //     }\n                //     return item;\n                // })\n                data = [...newData];\n                console.log(newData,\"New data\")\n            }\n            if(this.props.orderByProperty){\n                const dataPropoty = data.filter(item => (item.propoty===true && item.checked===false))\n                const dataCommon = data.filter(item =>(item.propoty===false && item.checked===false))\n                const dataDonePropoty = data.filter(item => (item.checked===true&&item.propoty===true))\n                const dataDoneCommon = data.filter(item => (item.checked===true&&item.propoty===false))\n                data = [...dataPropoty, ...dataCommon, ...dataDonePropoty, ...dataDoneCommon];\n            }\n\n            if(this.props.hideDone){\n                data = data.filter(item =>item.checked ===false)\n            }\n\n            this.setState({\n                data: data,\n            })\n        }\n        // if(prevState.data!==this.state.data){\n        //     this.props.updateItemStatus(this.state.data);\n        // }\n        if(prevState.index!==this.state.index){\n            this.props.updateIndexStatus(this.state.index)\n        }\n    }\n    // 勾选取消勾选的反馈函数\n    handleCheckboxChange = (index) => {\n        let data = [...this.state.data];\n        data[index].checked = !data[index].checked;\n        this.setState({ \n            data: data,\n        })\n      }\n      //序号传递函数 点击条目之后传递对应的序号， 传给上一层， todo将会把它传给edit来显示对应条目的详细内容\n    sendIndex = (index) =>{\n        this.setState({\n            index: index,\n        })\n    }\n\n    hideDoneMethod = () =>{\n        let hideDone = this.props.hideDone;\n        hideDone = !hideDone;\n        this.props.updateHideDone(hideDone);\n    }\n\n    orderByNameMethod = ()=>{\n        let orderByName = this.props.orderByName;\n        orderByName = !orderByName;\n        this.props.updateOrderByName(orderByName);\n    }\n\n    orderByPropertyMethod = ()=>{\n        let orderByProperty = this.props.orderByProperty;\n        orderByProperty = !orderByProperty;\n        this.props.updateOrderByProperty(orderByProperty);\n    }\n\n    render() {\n        const data = this.state.data;\n        let disableHideDone = this.state.disableHideDone;\n        //对data数组进行了map遍历\n        const rows = data.map((row, index)=>{\n            return(\n                //使用了key来重用列表\n                <tr key={index}>\n                    <div onClick={()=>this.sendIndex(row.id)}>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    {(row.encourage&&this.props.encourageMode)?\n                        <EncourageCheckbox \n                            checked={row.checked}\n                            color={row.propoty?\"secondary\":\"primary\"}\n                            onClick={()=>this.handleCheckboxChange(index)} \n                            />\n                        :<Checkbox \n                            checked={row.checked}\n                            color={row.propoty?\"secondary\":\"primary\"}\n                            onClick={()=>this.handleCheckboxChange(index)} \n                            />\n                    }\n                        </ThemeProvider>\n                        <span\n                            //重要的任务文字粗体显示 已经完成则是勾划掉的字体\n                            style={{ textDecoration: row.checked ? \"line-through\" : null,\n                            marginLeft:16, fontWeight: row.propoty ? \"bold\" : null,\n                                }}\n                        >\n                               {row.title}\n                        </span>\n                        <span>\n                        </span>\n                    </div>\n                </tr>\n            )\n        })\n        return(\n            <div className=\"container\">\n            <h3>List </h3>\n            <table>\n            {rows.length===0?<tbody style={{fontWeight:\"bold\"}}>. . . . .  .</tbody>:\n                <tbody>{rows}</tbody>}\n            </table>\n            <h4>Order Type</h4>\n                <label>Hide Done</label>\n                <ThemeProvider >\n                    <Switch\n                        disabled={disableHideDone}\n                        // disabled={true}\n                        checked={this.props.hideDone}\n                        name=\"hideDone\"\n                        id=\"hideDone\"\n                        color=\"primary\"\n                        onChange={this.hideDoneMethod}\n                        />\n                    </ThemeProvider>\n                <label>Order By Name</label>\n                <ThemeProvider >\n                    <Switch\n                        checked={this.props.orderByName}\n                        name=\"orderByName\"\n                        id=\"orderByName\"\n                        color=\"primary\"\n                        onChange={this.orderByNameMethod}\n                        />\n                    </ThemeProvider>\n                <label>Order By Property</label>\n                <ThemeProvider >\n                    <Switch\n                        checked={this.props.orderByProperty}\n                        name=\"orderByProperty\"\n                        id=\"orderByProperty\"\n                        color=\"secondary\"\n                        onChange={this.orderByPropertyMethod}\n                        />\n                    </ThemeProvider>\n                \n            </div>\n        )\n        \n    }\n}\n\nexport default ListModule;","import React, { Component } from 'react';\nimport CountDown from '../Clock/CountDown';\nimport InlineTomato from \"./InlineTomato\";\nimport AddModule from \"./AddModule\";\nimport EditBoard from './EditBoard';\nimport ListModule from \"./ListModule\";\n// todo部分的中心component todo数据的中心和最高曾 \nclass Todo extends Component {\n    //初始化state 同时接收App.js传来的设定参数\n    constructor(props){\n        super(props);\n        this.state={\n            index: 0,\n            Times:0,\n            inlineTag:false,\n            hideDone: false,\n            orderByName: false,\n            orderByProperty: false,\n            enableTomato:this.props.enableTomato,\n            inlineTomato:this.props.inlineTomato,\n            todoData:[],\n        }\n    }\n\n//lifecycle函数 从localStorage读取todo数据的document                       \ncomponentDidMount(){\n    const documentData = JSON.parse(localStorage.getItem(\"todo\"));\n    // const documentHideDone = JSON.parse(localStorage.getItem(\"hideDone\"));\n    // const documentOrderByName = JSON.parse(localStorage.getItem(\"orderByName\"));\n    // const documentOrderByProperty = JSON.parse(localStorage.getItem(\"orderByProperty\"));\n    \n    // if(documentOrderByName!==null){\n    //     this.setState({ \n    //         orderByName:documentOrderByName,\n    //     })\n    // }else{\n    //     this.setState({\n    //         orderByName:false,\n    //     })\n    // }\n\n    // if(documentOrderByProperty!==null){\n    //     this.setState({ \n    //         orderByProperty:documentOrderByProperty,\n    //     })\n    // }else{\n    //     this.setState({\n    //         orderByProperty:false,\n    //     })\n    // }\n\n    // if(documentHideDone!==null){\n    //     this.setState({ \n    //         hideDone:documentHideDone,\n    //     })\n    // }else{\n    //     this.setState({\n    //         hideDone:false,\n    //     })\n    // }\n\n    if (documentData !== null){\n      this.setState({\n        todoData:documentData,\n      })\n    }else{\n        //如果不存在数据，加载设定好的demo\n      this.setState({\n        index:0,\n        todoData:[\n            {\n                id:0,\n                checked:true,\n                title:\"Try to work 25h a day\",\n                tomatoNumber:0,\n                body:\"You know Professor Sun will love it\",\n                propoty:false,\n                encourage:false,\n            },\n            {\n                id:1,\n                checked:true,\n                title:\"Homework\",\n                tomatoNumber:5,\n                body:\"DDL is coming XD\",\n                propoty:true,\n                encourage:true,\n            },\n            {\n                id:2,\n                checked:false,\n                title:\"Design a chip\",\n                tomatoNumber:3,\n                body:\"We Chinese can carve a chip by hand, Cry Dutchess :<\",\n                propoty:true, \n                encourage:false,\n            },\n            {\n                id:3,\n                checked:false,\n                title:\"Sleep\",\n                tomatoNumber:0,\n                body:'',\n                propoty:false,\n                encourage:false,\n            },\n            {\n                id:4,\n                checked:false,\n                title:\"Eat\",\n                tomatoNumber:3,\n                body:\"\",\n                propoty:false,\n                encourage:true,\n            }\n        ]\n      })\n    }\n    }\n\n    //如果state的todoData的内容变化， 同步更新localStorage中储存的值\n    componentDidUpdate(prevState){\n        if(prevState.todoData!==this.state.todoData){\n            localStorage.setItem(\"todo\",JSON.stringify( this.state.todoData));\n        }\n        // if(prevState.hideDone!==this.state.hideDone){\n        //     localStorage.setItem(\"hideDone\",JSON.stringify(this.state.hideDone))\n        // }\n        // if(prevState.orderByName!==this.state.orderByName){\n        //     localStorage.setItem(\"orderByName\",JSON.stringify(this.state.orderByName))\n        // }\n        // if(prevState.orderByProperty!==this.state.orderByName){\n        //     localStorage.setItem(\"orderByProperty\",JSON.stringify(this.state.orderByProperty))\n        // }\n    }\n\n    //任务增加函数 \n    //接受第一部分 addmodule中输入的内容， 将新的内容增加到todoData的数组中\n    updateAddItem =(item)=>{\n        const {todoData} = this.state; \n        let newId = todoData.length;\n        const newItem = {\n            id:newId,\n            checked:false,\n            title:item,\n            tomatoNumber:0,\n            body:\"\",\n            propoty:false,\n            encourage:false,\n        }\n        console.log(newItem)\n        const newTodoData =  [...todoData,newItem];\n        this.setState({\n            todoData: newTodoData,\n        })\n    }\n    //更新todoData 函数\n    //从editboard中接收修改后的新的todoData进行更新\n    updateItemStatus = item => {\n        this.setState({\n            todoData:item,\n        })\n    }\n    //index更新函数\n    //接收listmodule中点击的条目对应的id，更新state中的index方便传递到editmodule中\n    updateIndexStatus = index =>{\n        this.setState({\n            index: index,\n        })\n    }\n    //删除完成项目函数\n    deleteDoneItem = () =>{\n        const data = this.state.todoData;\n        let newData  = [];\n        let Data = [];\n        //使用data数组的filter函数， 保留未完成的条目\n        newData = data.filter(item=>item.checked === false)\n        //重新进行id的分配，消除删除造成的id和index的不一致问题\n        Data = newData.map((item,index)=>{\n            item.id = index;\n            return item;\n        })\n        //删除的警告确认\n        if(window.confirm(\"Sure to Change?\"))\n        //对最高级state的数据todoData进行了更新\n        this.setState({\n            todoData: Data,\n\n        })\n    }\n\n    //删除单个条目函数\n    // 在editmodule中使用\n    deleteItem = () =>{\n        const data = this.state.todoData;\n        const index = this.state.index;\n        let newData  = [];\n        let Data = [];\n        newData  = data.filter(item=>item.id!==index)\n        // 重新给id\n        Data = newData.map((item,index)=>{\n            item.id = index;\n            return item;\n        })\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: Data,\n        })\n    }\n    //全部删除函数\n    clearAll = ()=>{\n        const newData = [];\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: newData,\n        })\n    }\n    \n    //inlinetomato开始工作函数\n    inlineTomatoButton = ()=>{\n        const index = this.state.index;\n        let tomatoTimes =0;\n        if (this.state.todoData[index]!==undefined)\n            tomatoTimes = this.state.todoData[index].tomatoNumber;\n            //更新tomatoclock的工作周期\n        this.props.updateTomatoTimes(tomatoTimes);\n        this.setState({\n            Times:tomatoTimes,\n            // 给inlineTag赋值，触发显示\n            inlineTag:true,\n        })\n    }\n\n\n    updateHideDone = (event) =>{\n        this.setState({\n            hideDone: event,\n        }) \n    }\n\n    updateOrderByName =(event) =>{\n        this.setState({\n            orderByName: event,\n        })\n    }\n\n    updateOrderByProperty = (event)=>{\n        this.setState({\n            orderByProperty:event,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div>\n                    <h1>To do</h1>\n                    {/* 增添部分 */}\n                    <AddModule \n                        todoData={this.state.todoData}\n                        updateAddItem={this.updateAddItem}\n                    />\n                </div>\n                <br/>\n                {/* 如果列表中没有数据，后面的模块不显示 */}\n                {this.state.todoData.length!==0 &&\n                <div >\n                <div className=\"flex-row\">\n                {/* 第二部分 左边是列表 右边是编辑 */}\n                    <div className=\"flex-large\">\n                        {/* <h3>List </h3> */}\n                            <ListModule \n                                todoData ={this.state.todoData}\n                                updateItemStatus = {this.updateItemStatus}\n                                index={this.state.index}\n                                updateIndexStatus={this.updateIndexStatus}\n                                encourageMode={this.props.encourageMode}\n                                hideDone={this.state.hideDone}\n                                orderByName={this.state.orderByName}\n                                orderByProperty={this.state.orderByProperty}\n                                updateOrderByName={this.updateOrderByName}\n                                updateOrderByProperty={this.updateOrderByProperty}\n                                updateHideDone = {this.updateHideDone}\n                            />\n                        <span>\n                        <br/>\n                        {/* 为了符合react的刷新机制，实现页面的局部刷新 将删除按钮分出 */}\n                        <button \n                            onClick={this.deleteDoneItem}>\n                                Clean Done\n                        </button>\n                        <button \n                            style={{marginLeft: \"1rem\"}}\n                            onClick={this.clearAll}>\n                                Clear All\n                        </button>\n                        </span>\n                    </div>\n                   \n                    <div className=\"flex-large\">\n                            <EditBoard\n                                data={this.state.todoData}\n                                index={this.state.index}\n                                inlineTomato={this.props.inlineTomato}\n                                updateItemStatus={this.updateItemStatus}\n                                updateTomatoTimes={this.props.updateTomatoTimes}\n                                deleteItem={this.deleteItem}\n                                enableTomato={this.props.enableTomato}\n                                encourageMode={this.props.encourageMode}\n                            />\n                            {/* restricmode下不使用单个项目的删除 */}\n                            {!this.props.restrictMode &&\n                            <div>\n                            <label style={{marginLeft: \"1rem\"}}>\n                                Item Delete\n                            </label>\n                            <span>\n                            <button \n                                onClick={this.deleteItem}\n                                style={{marginLeft: \"1rem\"}}>\n                                    Delete\n                            </button>\n                            {/* inlinemode的番茄工作模式触发 */}\n                            {this.props.inlineTomato &&\n                            <button \n                                onClick={this.inlineTomatoButton}\n                                style={{marginLeft: \"1rem\"}}>\n                                    Start Timing\n                            </button>}\n                            </span>\n                            </div>}\n                    </div> \n                   </div> \n                   {/* inlinetomato的显示条件 */}\n                   {(this.props.inlineTomato&&this.props.enableTomato&&this.state.inlineTag) &&\n                   <div>\n                    <br/>\n                    <hr/>\n                        <InlineTomato\n                            Times = {this.state.Times}\n                            enableTomato={this.props.enableTomato}\n                            restrictMode={this.props.restrictMode}\n                            inlineTomato={false}\n                        />\n                   </div>}\n                   </div>}\n                   <br/>\n            </div>    \n        );\n    }\n}\n\nexport default Todo;","import React, { Component } from 'react';\n\nclass Board extends Component {\n//board的component\n    render() {\n        return (\n           <div className=\"container\">\n               <h1>Board</h1>\n               \n           </div>\n        );\n    }\n}\n\nexport default Board;","import React, { Component } from 'react';\nimport {Switch} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green} from '@material-ui/core/colors';\n//设定界面 setting的component，进行功能选项的设置\nclass Settings extends Component {\n    //设定switch组建的样式\n    switchTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[700],\n            },\n          secondary: {\n            main: green[300],\n          },\n        },\n      });\n\n    //分别更新四个设定参数\n\n    restrictModeMethod = ()=>{\n        let restricMode = this.props.restrictMode;\n        restricMode = !restricMode;\n        this.props.updateRestricMode(restricMode);\n        //如果使用restrictmode会自动禁用inlinetomato\n        this.props.updateInlineTomato(false);\n    }\n\n    enableTomatoMethod =()=>{\n        let enableTomato = this.props.enableTomato;\n        enableTomato = !enableTomato;\n        this.props.updateEnableTomato(enableTomato);\n        if(!enableTomato){\n            //如果不使用tomato clock， inline tomato自然也是禁用的\n            this.props.updateInlineTomato(false);\n        }\n    }\n\n    inlineTomatoMethod = ()=>{\n        let inlineTomato = this.props.inlineTomato;\n        inlineTomato = !inlineTomato;\n        this.props.updateInlineTomato(inlineTomato);\n    }\n\n    encourageModeMethod =()=>{\n        let encourageMode = this.props.encourageMode;\n        encourageMode = !encourageMode;\n        this.props.updateEncourageMode(encourageMode);\n    }\n//lifecycle函数 显示\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Setting</h1>\n                <hr/>\n                <span>\n                    <label>Restrict Mode</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            // switch组件， 对应上层App.js传来的数据\n                            checked={this.props.restrictMode}\n                            name=\"restrictMode\"\n                            id=\"restrictMode\"\n                            color=\"secondary\"\n                            // 触发函数\n                            onChange={this.restrictModeMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n                <span>\n                    <label>Enable Tomato Clock</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            checked={this.props.enableTomato}\n                            name=\"enableTomato\"\n                            id=\"enableTomato\"\n                            color=\"primary\"\n                            onChange={this.enableTomatoMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n                <span>\n                    <label>Inline Tomato Clock</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            // disabled={this.props.restrictMode}\n                            // 禁用按钮的条件\n                            disabled={this.props.restrictMode||!(this.props.enableTomato)}\n                            checked={this.props.inlineTomato}\n                            name=\"inlineTomato\"\n                            id=\"inlineTomato\"\n                            color=\"primary\"\n                            onChange={this.inlineTomatoMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n                <span>\n                    <label>Encourage Mode</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            checked={this.props.encourageMode}\n                            name=\"encourageMode\"\n                            id=\"encourageMode\"\n                            color=\"primary\"\n                            onChange={this.encourageModeMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React, { useState, useEffect } from 'react';\nimport \"./Clock.css\";\n// 因为时间的操作的灵活性较高，所以使用了react hook的写法。 虽然是函数的形式，但是本质上也是个对象\nconst Timer = () => {\n  //在state中添加了秒数和计时状态参数\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n//停止函数\n  const toggle=()=> {\n    setIsActive(!isActive);\n  }\n//重置函数\n  const reset=() =>{setSeconds(0);\n    setIsActive(false);\n  }\n//lifecycle函数 \n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      //秒数1s加一\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {seconds}s\n      </div> \n      <div className=\"row\">\n        <button \n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} \n            onClick={toggle}>\n            {/* 根据状态来改变按钮的名字 */}\n                {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button \n            className=\"button\" \n            onClick={reset}>\n                Reset\n        </button>\n        <br/>\n        <br/>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;","import React, { Component } from 'react';\nimport Timer from \"./Timer\";\nimport CountDown from \"./CountDown\";\n//clock界面的component， 作为了timer和countdown的承载component\nclass Clock extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n               {/* <h1>Clock</h1> */}\n               <div className=\"flex-row\">\n               {/* 调用flex-large的classname，在大荧幕的状态左右的grid各占1/2 */}\n                    <div className=\"flex-large\">\n                    <h3>Timer</h3>\n                        <Timer/>                        \n                    </div>\n                    <div className=\"flex-large\">\n                    <h3>Count Down</h3>\n                        <CountDown\n                        // 给countdown传递参数\n                            Times = {this.props.Times}\n                            enableTomato={this.props.enableTomato}\n                            restrictMode={this.props.restrictMode}\n                            inlineTomato={this.props.inlineTomato}\n                        />\n                    </div>\n               </div>\n               \n           </div>\n        );\n    }\n}\n\nexport default Clock;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n//导航栏component\nclass Navibar extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>\n                            {/* 用react-route-dom的Link路由对应的位置 */}\n                                <Link to=\"/workdash\">\n                                    To do\n                                </Link>\n                            </th>\n                            {/* <th>\n                                暂时移除的功能\n                                <Link to=\"/board\">\n                                    Board\n                                </Link>\n                            </th> */}\n                            <th>\n                                <Link to=\"/clock\">\n                                    Clock\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/settings\">\n                                    Setting\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/about\">\n                                    About\n                                </Link>\n                            </th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Navibar;","import React, { Component } from 'react';\n// 作者的信息和软件的使用说明的文字\nclass About extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>About</h1>\n                {/* <hr/> */}\n                <p>A React App Combining Todo and Tomato Clock Together</p>\n                <hr/>\n                <h4>Setting</h4>\n                <label><li>Restrict Mode</li></label>\n                <p>\n                    <tr>As seen from the name, \n                    Restrict Mode will disable some features to help you concentrate better.</tr>\n                </p>\n                <p>\n                    <li>Disable Single Item Delete Button</li>\n                    <tr>Restrict Mode will disable single delete button which will \n                    prevent you from deleting the item you added on the list.</tr>\n                    <tr>Hard tasks left on the list of no doubt make you not that happy.</tr>\n                    <tr>So, urge yourself to complete them instead of cheating yourself...</tr>\n                    <tr>Eh, at least we have taken away your delete button XD .</tr>\n                </p>\n\n                <p>\n                    <li>Disable Inline Tomato Clock</li>\n                    <tr>Restrict Mode will disable Inline Tomato Clock.</tr>\n                    <tr>Shown just down the task list, Inline Tomato Clock makes it easy to check \n                    your task with clock counting. </tr>\n                    <tr>However, if you want to enjoy your concentration without any interuption.\n                    Leaving other tasks alone is a wise choice.</tr>\n                    <tr>So, why not jump to the clock page and enjoy your own time :)</tr>\n\n                </p>\n                <p>\n                    <li>Disable Pause Option of the Tomato Clock</li>\n                    <tr>Restrict Mode will disable the Pause Option of the Tomato (Count Down) Clock.</tr>\n                    <tr>In fact, according to the policy of Tomato Work Method, pause is even not allowed.</tr>\n                    <tr>So, if you sruely wanna pause, just reset and start again.</tr>\n                </p>\n\n\n                <label><li>Encourage Mode</li></label>\n                <p>\n                    <tr>If there were no bosses patroling around, </tr>\n                    <tr>everyone would be happy showing off the fact \n                    of finishing work ahead of scheduled time.</tr>\n                    <tr>To be host, I am not rich enough to store your data on the cloud \n                    without selling them to your managers.</tr>\n                    <tr>However, my coding level surely sucks, which will guarantee your privacy safety\n                     because I have no ability to store data online.</tr>\n                    <tr>So, you should feel lucky and keep the switch on. Feel free \n                    to tap the switch if you finish your work in advance.</tr>\n                    <tr>The checkbox will turn green as encouragement.</tr>\n\n                </p>\n                <h4>To Do</h4>\n                <p>\n                    <tr>Add your item to start.</tr>\n                    <tr>Click at the task to see its propotions and edit it.</tr>\n                    <tr>You can set tomato clock time to each task use interactive tomato clock.</tr>\n                </p>\n                {/* <h4>Clock</h4> */}\n\n                <hr/>\n                <dd>Designed by HYY at BUPT</dd>\n                <br/>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Switch , Route} from 'react-router-dom';\nimport Todo from \"./Component/Todo/Todo\";\nimport Board from \"./Component/Boards/Board\";\nimport Settings from \"./Component/Settings\";\nimport Clock from \"./Component/Clock/Clock\";\nimport Navibar from \"./Component/Navibar\";\nimport About from \"./Component/About\"\n\n//程序的main组件， 用作路由的设定和全局设定变量的储存\n\nclass App extends Component {\n//构造函数\n  constructor(props) {\n    super(props);\n    //声明App的state\n    this.state={\n      Times:0,   // 番茄钟记时次数的变量存储\n      //下面分别是四个设定参数\n      restrictMode:false,\n      enableTomato:true,\n      inlineTomato:true,\n      encourageMode:true,\n    }\n  }\n//lifecycle函数 从localStorage读取先前存储的设定参数\n  componentDidMount(){\n    const documentEnableTomato = JSON.parse(localStorage.getItem(\"enableTomato\"));\n    const documentRestrictMode = JSON.parse(localStorage.getItem(\"restrictMode\"));\n    const documentInlineTomato = JSON.parse(localStorage.getItem(\"inlineTomato\"));\n    const documentEncourageMode = JSON.parse(localStorage.getItem(\"encourageMode\"));\n    \n    // 空值判断和对设定参数进行赋值\n    if(documentEnableTomato!==null){\n      this.setState({\n        enableTomato:documentEnableTomato,\n      })\n    }else{\n      this.setState({\n        enableTomato:true,\n      })\n    }\n\n    if(documentInlineTomato!==null){\n      this.setState({\n        inlineTomato:documentInlineTomato,\n      })\n    }else{\n      this.setState({\n        inlineTomato:true,\n      })\n    }\n\n    if(documentEncourageMode!==null){\n      this.setState({\n        encourageMode:documentEncourageMode,\n      })\n    }else{\n      this.setState({\n        encourageMode:true,\n      })\n    }\n\n    if(documentRestrictMode!==null){\n      this.setState({\n        restrictMode:documentRestrictMode,\n      })\n    }else{\n      this.setState({\n        restrictMode:false,\n      })\n    }\n  }\n//lifecycle函数 state中的数据出现变化之后，向localStorage对应的document赋值，相当于本地的储存环节\n//这里对应的也是四个设定参数的本地储存 \ncomponentDidUpdate(prevState){\n    if(prevState.enableTomato!==this.state.enableTomato){\n        localStorage.setItem(\"enableTomato\",JSON.stringify( this.state.enableTomato));\n    }\n\n    if(prevState.restrictMode!==this.state.restrictMode){\n      localStorage.setItem(\"restrictMode\",JSON.stringify( this.state.restrictMode));\n    }\n\n    if(prevState.inlineTomato!==this.state.inlineTomato){\n      localStorage.setItem(\"inlineTomato\",JSON.stringify( this.state.inlineTomato));\n    }\n\n    if(prevState.encourageMode!==this.state.encourageMode){\n      localStorage.setItem(\"encourageMode\",JSON.stringify( this.state.encourageMode));\n    }\n}\n//番茄钟次数的赋值函数， 用于子模块调用\n  updateTomatoTimes = (item)=>{\n    this.setState({\n      Times:item,\n    })\n  }\n\n\n  //下面的四个函数分别对四个设定参数进行了回传的赋值，用于子模块调用\n\n  updateRestricMode = (item) =>{\n    this.setState({\n      restrictMode: item,\n    })\n  }\n\n  updateEnableTomato = (item) =>{\n    this.setState({\n      enableTomato:item,\n    })\n  }\n\n  updateInlineTomato = (item) =>{\n    this.setState({\n      inlineTomato:item,\n    })\n  }\n\n  updateEncourageMode =(item)=>{\n    this.setState({\n      encourageMode:item,\n    })\n  }\n//render函数， 进行显示， 此处主要是react-route-dom的路由的设定和参数的传递\n  render() {\n    return (\n      <div className=\"container\">\n        {/* 顶部导航栏 */}\n        <Navibar/>  \n        <Switch>\n        {/* 路由的设定和向子component的props传递参数 */}\n          <Route path=\"/workdash\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Todo\n              Times ={this.state.Times}\n              updateTomatoTimes={this.updateTomatoTimes}\n              restrictMode={this.state.restrictMode}\n              enableTomato={this.state.enableTomato}\n              inlineTomato={this.state.inlineTomato}\n              encourageMode={this.state.encourageMode}\n            />\n          </Route>\n          <Route path=\"/board\">\n            <Board/>\n          </Route>\n          <Route path=\"/clock\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Clock\n              Times ={this.state.Times}\n              enableTomato={this.state.enableTomato}\n              restrictMode={this.state.restrictMode}\n              inlineTomato={this.state.inlineTomato}\n            />\n          </Route>\n          <Route path=\"/settings\">\n            <Settings\n              restrictMode={this.state.restrictMode}\n              updateRestricMode={this.updateRestricMode}\n              enableTomato={this.state.enableTomato}\n              updateEnableTomato={this.updateEnableTomato}\n              inlineTomato={this.state.inlineTomato}\n              updateInlineTomato={this.updateInlineTomato}\n              encourageMode={this.state.encourageMode}\n              updateEncourageMode={this.updateEncourageMode}\n              />\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n//导出App\nexport default App;","//pwa的设定\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              \n              console.log(\n               \"OK :)\" \n                  \n              );\n\n              \n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              \n              console.log('Content is cached for offline use.');\n\n              \n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  \n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      \n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        \n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        \n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// wpa的相关设定\nconst reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n//用App component替换空html页面id为root的div， 同时启用react-route-dom路由\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n//离线使用 安装为webapp的设定选项\nserviceWorkerRegistration.unregister();\n\nreportWebVitals();\n"],"sourceRoot":""}