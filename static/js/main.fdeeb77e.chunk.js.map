{"version":3,"sources":["Component/Clock/CountDown.js","Component/Todo/InlineTomato.js","Component/Todo/AddModule.js","Component/Todo/EditBoard.js","Component/Todo/ListModule.js","Component/Todo/Todo.js","Component/Boards/Board.js","Component/Settings.js","Component/Clock/Timer.js","Component/Clock/Clock.js","Component/Navibar.js","Component/About.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["CountDown","props","time","useState","counter","setCounter","isActive","setIsActive","isWork","setisWork","Times","setTimes","prevTimes","setPrevTimes","useEffect","interval","setInterval","clearInterval","toggle","restrictMode","minutes","Math","floor","seconds","window","alert","console","log","className","enableTomato","onClick","inlineTomato","ceil","InlineTomato","this","Component","AddModule","addButtonHandler","title","state","updateAddItem","setState","changeHandler","event","target","name","value","htmlFor","type","id","onChange","EditBoard","checkboxTheme","createMuiTheme","palette","primary","main","blue","secondary","green","marks","label","editChange","data","index","switchPropotyChange","propoty","switchEncourageChange","encourage","editSubmit","updateItemStatus","tomatoButton","tomatoTimes","undefined","tomatoNumber","updateTomatoTimes","sliderChanged","valuetext","encourageMode","prevProps","prevState","checked","body","ThemeProvider","theme","Switch","disabled","color","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","max","to","EncourageCheckbox","withStyles","root","Checkbox","ListModule","default","handleCheckboxChange","sendIndex","todoData","updateIndexStatus","rows","map","row","style","textDecoration","marginLeft","fontWeight","Todo","item","newItem","length","newTodoData","deleteDoneItem","Data","filter","confirm","deleteItem","clearAll","inlineTomatoButton","inlineTag","documentData","JSON","parse","localStorage","getItem","setItem","stringify","Board","Settings","switchTheme","restrictModeMethod","restricMode","updateRestricMode","updateInlineTomato","enableTomatoMethod","updateEnableTomato","inlineTomatoMethod","encourageModeMethod","updateEncourageMode","Timer","setSeconds","Clock","Navibar","About","App","documentEnableTomato","documentRestrictMode","documentInlineTomato","documentEncourageMode","path","rel","Boolean","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fdeeb77e.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\n// import {Switch} from \"@material-ui/core\";\nimport \"./Clock.css\";\nconst CountDown=(props) =>{\n    let time = 1500;\n    let freeTime = 300;\n    const [counter, setCounter] = useState(time);\n    const [isActive, setIsActive] = useState(false);\n    const [isWork, setisWork] = useState(true);\n    const [Times, setTimes] = useState(props.Times);\n    // const [tomatoTag, setTomatoTag] = useState(true)\n    const [prevTimes,setPrevTimes] = useState(props.Times);\n\n    useEffect(()=>{\n      setPrevTimes(props.Times);\n    })\n\n    useEffect(() => {\n      if(prevTimes !== props.Times){\n        setTimes(props.Times);\n      }\n    })\n\n    useEffect(() => {\n      let interval = null;\n      if (isActive) {\n        interval = setInterval(() => {\n          setCounter(counter => {\n            if(counter > 0)\n              return counter -1;\n            else \n              return 0;\n          });\n        }, 1000);\n      } else if (!isActive && counter !== 0) {\n        clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }, [isActive, counter]);\n    \n    const nextMode = () =>{\n      setIsActive(false);\n      setisWork(!isWork);\n      setCounter(isWork?freeTime:time);\n      setTimes(Times => Times - 0.5);\n    }\n\n    const toggle = () => {\n        setIsActive(!isActive);\n        if(props.restrictMode){\n          setCounter(isWork?time:freeTime);\n          // setIsActive(false);\n        }\n      }\n    \n    const reset = () => {\n        setCounter(isWork?time:freeTime);\n        setIsActive(false);\n      }\n    \n  \n    const minutes = Math.floor(counter / 60);\n    const seconds = counter % 60;\n    useEffect(()=>{\n      if(minutes===0 && seconds===0 && isWork===true)\n        window.alert(\"Well Done, Take a Break :)\")\n    \n      if(minutes===0 && seconds===0 && isWork===false)\n        window.alert(\"Back to Work XD\")\n    })\nconsole.log(Times)\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {minutes}:{seconds}\n      </div> \n      <div className=\"row\">\n      {(props.restrictMode && props.enableTomato) ?\n        <button\n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`}\n            onClick={toggle}>\n                {isActive ? 'Reset' : 'Start'}\n        </button>:\n        <span>\n        <button \n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} \n            onClick={toggle}>\n                {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button \n            className=\"button\" \n            onClick={reset}>\n                Reset\n        </button>\n        </span>\n        }\n        <button\n          className=\"button\"\n          onClick={nextMode}>\n            Next\n        </button>\n      </div>\n      \n      \n      {props.enableTomato &&\n      <div>\n      {!props.inlineTomato &&\n      <div>\n      {Times<=0?\n      <div className='row'>\n        All Done\n      </div>:\n      <div className=\"row\">\n        {Math.ceil(Times)} Times Left\n      </div>}\n      </div>\n      }\n      </div>}\n      <br/>\n    </div>\n  );\n}\nexport default CountDown\n","import React, { Component } from 'react';\n\nimport CountDown from \"../Clock/CountDown\"\n\nclass InlineTomato extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>\n                <h3>Inline Tomato Clock</h3>\n                    <CountDown\n                        Times = {this.props.Times}\n                        enableTomato={this.props.enableTomato}\n                        restrictMode={this.props.restrictMode}\n                        inlineTomato={this.props.inlineTomato}\n                    />\n            </div>\n        );\n    }\n}\n\nexport default InlineTomato;","import React, { Component } from 'react';\n\nclass AddModule extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            title:\"\",\n        }\n    }\n\n    addButtonHandler=()=>{\n        const {title} = this.state;\n        if(title!=='')\n        this.props.updateAddItem(title);\n        // console.log(\"addButton\")\n        this.setState({\n            title:\"\",\n        })\n    }\n\n    changeHandler =(event)=>{\n        const {name, value} = event.target;\n        this.setState({\n            [name]:value,\n        })\n        \n    }\n\n    render() {\n        // const data = [...this.state.todoData];\n        return (\n            <form>\n                <label htmlFor=\"title\">\n                    <h5>What's Your Plan Today</h5>\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    onChange={this.changeHandler}\n                    value={this.state.title}\n                />\n                <input \n                    type=\"button\" \n                    value=\"Add\"\n                    onClick={this.addButtonHandler}/>\n            </form>\n        );\n    }\n}\n\nexport default AddModule;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {Switch, Slider} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green} from '@material-ui/core/colors';\n\nclass EditBoard extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            data:this.props.data,\n            enableTomato:this.props.enableTomato,\n            encourageMode:this.props.encourageMode,\n        }\n\n    }\n\n    checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[700],\n            },\n          secondary: {\n            main: green[300],\n          },\n        },\n      });\n\n      marks = [\n        {\n            value:0,\n            label:0,\n        },\n        {\n            value:5,\n            label:5,\n        }\n    ]\n\n    componentDidMount(){\n        this.setState({\n            data:this.props.data,\n    \n        })\n    }\n    \n    componentDidUpdate(prevProps,prevState){\n        if(prevProps.data !== this.props.data){\n            this.setState({\n                data:this.props.data,\n            })\n        }\n        \n    }\n\n    editChange=(event)=>{\n        const {name,value} = event.target;\n        let {data} = this.state;\n        data[this.props.index][name] = value;\n        this.setState({\n            data: data,\n        })\n    }\n\n    switchPropotyChange = ()=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].propoty = !data[index].propoty\n        this.setState({\n            data: data,\n        })\n    }\n\n    switchEncourageChange = ()=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].encourage = !data[index].encourage\n        this.setState({\n            data: data,\n        })\n    }\n\n    editSubmit=()=>{\n        // if(window.confirm(\"Sure to Change?\"))\n            this.props.updateItemStatus(this.state.data);\n    }\n\n    tomatoButton = ()=>{\n        const index = this.props.index;\n        let tomatoTimes =0;\n        if (this.props.data[index]!==undefined)\n            tomatoTimes = this.props.data[index].tomatoNumber;\n        this.props.updateTomatoTimes(tomatoTimes);\n        // this.props.updateTomatoTime(tomatoTimes);\n    }\n\n    sliderChanged =(event,value)=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].tomatoNumber = value;\n        this.setState({\n            data: data,\n        })\n    }\n\n    valuetext = (value)=> {\n        return `${value} Tomatos`;\n      }\n\n      \n\n    render() {\n        const index = this.props.index;\n        let data = {};\n        if (this.props.data[index]!==undefined)\n             data = this.props.data[index];\n        else data = {\n                id:0,\n                checked:false,\n                title:'',\n                tomatoNumber:0,\n                body:\"\",\n                propoty:false,\n                encourage:false,\n        }\n        // console.log(data.title)\n        return (\n            \n            <div className=\"container\">\n                <h3>Edit</h3>\n                <form>\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        value={data.title}\n                        onChange={this.editChange}\n                    /> \n                    {this.props.encourageMode &&\n                    <div>\n                    <label>Done Advance</label>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Switch\n                        disabled={!data.checked}\n                        checked={data.checked?data.encourage:false}\n                        name=\"encourage\"\n                        id=\"encourage\"\n                        color=\"secondary\"\n                        onChange={this.switchEncourageChange}\n                        />\n                    </ThemeProvider>\n                    </div>}\n                    {this.props.enableTomato &&\n                    <div>\n                    <label>Tomato Time {data.tomatoNumber!==0?data.tomatoNumber:null}</label>\n                    <span>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Slider \n                        value={data.tomatoNumber}\n                        getAriaValueText={this.valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        valueLabelDisplay=\"auto\"\n                        step={1}\n                        marks={this.marks}\n                        // valueLabelDisplay=\"on\"\n                        min={0}\n                        max={5}\n                        name=\"tomatoNumber\"\n                        id='tomatoNumber'\n                        onChange={this.sliderChanged}\n                    />\n                    </ThemeProvider>\n                    {!this.props.inlineTomato &&\n                    <Link to=\"/clock\">\n                    <button onClick={this.tomatoButton}>\n                        Start Timing\n                    </button>   \n                    </Link>\n                    }\n                    </span>\n                    </div>}\n                    <label>Important</label>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Switch\n                        checked={data.propoty}\n                        name=\"propoty\"\n                        id=\"propoty\"\n                        color=\"primary\"\n                        onChange={this.switchPropotyChange}\n                        />\n                    </ThemeProvider>\n                    <label>Description</label>\n                    <textarea\n                        type=\"text\"\n                        id=\"description\"\n                        name=\"body\"\n                        value={data.body}\n                        onChange={this.editChange}\n                    />   \n                    <span>\n                        <input\n                            type=\"button\"\n                            value=\"Save\"\n                            onClick={this.editSubmit}\n                        />\n                        {/* <button \n                            onClick={this.props.deleteItem}\n                            style={{marginLeft: \"1rem\"}}>\n                                Delete\n                        </button> */}\n                    </span>\n        \n                </form>\n            </div>     \n        );\n    \n    }\n}\n\nexport default EditBoard;","import React, { Component } from 'react';\nimport { Checkbox } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green } from '@material-ui/core/colors';\nimport { withStyles } from '@material-ui/core/styles';\n\n\n// import Checkbox from \"./CheckBox\";\n\nconst EncourageCheckbox = withStyles({\n    root: {\n    //   color: green[400],\n      '&$checked': {\n        color: green[300],\n      },\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\n\nclass ListModule extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state={\n            data:this.props.todoData,\n            index:-1,\n            // checked:false,\n        }\n    }\n\n    \n    \n\n    checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[300],\n            },\n          secondary: {\n            main: blue[700],\n          },\n          default:{\n            main: green[300],\n          }\n        },\n      });\n\n    componentDidMount(){\n        this.setState({\n            // data:this.props.todoData,\n            index:this.props.index,\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.todoData!==this.props.todoData){\n            this.setState({\n                data: this.props.todoData,\n            })\n        }\n        if(prevState.data!==this.state.data){\n            this.props.updateItemStatus(this.state.data);\n        }\n        if(prevState.index!==this.state.index){\n            this.props.updateIndexStatus(this.state.index)\n        }\n    }\n\n    handleCheckboxChange = (index) => {\n        let data = [...this.state.data];\n        data[index].checked = !data[index].checked;\n        this.setState({ \n            data: data,\n        })\n      }\n\n    sendIndex = (index) =>{\n        this.setState({\n            index: index,\n        })\n    }\n\n    render() {\n        const data = this.props.todoData;\n        // console.log(data);\n        // console.log(\"now map\")\n        const rows = data.map((row, index)=>{\n            // console.log(row,\"_____________________\")\n            // console.log(\"Checked\")\n            // console.log(row.checked)\n            return(\n                <tr key={index}>\n                    <div onClick={()=>this.sendIndex(index)}>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    {row.encourage?\n                        <EncourageCheckbox \n                            checked={row.checked}\n                            color={row.propoty?\"secondary\":\"primary\"}\n                            onClick={()=>this.handleCheckboxChange(index)} \n                            />\n                        :<Checkbox \n                            checked={row.checked}\n                            color={row.propoty?\"secondary\":\"primary\"}\n                            onClick={()=>this.handleCheckboxChange(index)} \n                            />\n                    }\n                        </ThemeProvider>\n                        <span\n                            // onClick={()=>this.sendIndex(index)}\n                            style={{ textDecoration: row.checked ? \"line-through\" : null,\n                            marginLeft:16, fontWeight: row.propoty ? \"bold\" : null,\n                                }}\n                        >\n                               {row.title}\n                        </span>\n                        <span>\n                        </span>\n                    </div>\n                </tr>\n            )\n        })\n        return(\n            <div className=\"container\">\n            <table>\n                <tbody>{rows}</tbody>\n            </table>\n            </div>\n        )\n        \n    }\n}\n\nexport default ListModule;","import React, { Component } from 'react';\nimport CountDown from '../Clock/CountDown';\nimport InlineTomato from \"./InlineTomato\";\nimport AddModule from \"./AddModule\";\nimport EditBoard from './EditBoard';\nimport ListModule from \"./ListModule\";\n\nclass Todo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            index: 0,\n            Times:0,\n            inlineTag:false,\n            enableTomato:this.props.enableTomato,\n            inlineTomato:this.props.inlineTomato,\n            todoData:[],\n        }\n    }\n\n                       \ncomponentDidMount(){\n    const documentData = JSON.parse(localStorage.getItem(\"todo\"));\n    if (documentData !== null){\n      this.setState({\n        todoData:documentData,\n      })\n    }else{\n      this.setState({\n        index:0,\n        todoData:[\n            {\n                id:0,\n                checked:true,\n                title:\"Try to work 25h a day\",\n                tomatoNumber:0,\n                body:\"You know Professor Sun will love it\",\n                propoty:false,\n                encourage:false,\n            },\n            {\n                id:1,\n                checked:true,\n                title:\"Homework\",\n                tomatoNumber:5,\n                body:\"DDL is coming XD\",\n                propoty:true,\n                encourage:true,\n            },\n            {\n                id:2,\n                checked:false,\n                title:\"Design a chip\",\n                tomatoNumber:3,\n                body:\"We Chinese can carve a chip by hand, Cry Dutchess :<\",\n                propoty:true, \n                encourage:false,\n            },\n            {\n                id:3,\n                checked:false,\n                title:\"Sleep\",\n                tomatoNumber:0,\n                body:'',\n                propoty:false,\n                encourage:false,\n            },\n            {\n                id:4,\n                checked:false,\n                title:\"Eat\",\n                tomatoNumber:3,\n                body:\"\",\n                propoty:false,\n                encourage:true,\n            }\n        ]\n      })\n    }\n    }\n\n    componentDidUpdate(prevState){\n        if(prevState.todoData!==this.state.todoData){\n            localStorage.setItem(\"todo\",JSON.stringify( this.state.todoData));\n        }\n    }\n\n    updateAddItem =(item)=>{\n        const {todoData} = this.state; \n        let newId = todoData.length;\n        const newItem = {\n            id:newId,\n            checked:false,\n            title:item,\n            tomatoNumber:0,\n            body:\"\",\n            propoty:false,\n            encourage:false,\n        }\n        console.log(newItem)\n        const newTodoData =  [...todoData,newItem];\n        this.setState({\n            todoData: newTodoData,\n        })\n    }\n\n    updateItemStatus = item => {\n        this.setState({\n            todoData:item,\n        })\n    }\n\n    updateIndexStatus = index =>{\n        this.setState({\n            index: index,\n        })\n    }\n\n    deleteDoneItem = () =>{\n        const data = this.state.todoData;\n        let newData  = [];\n        let Data = [];\n        newData = data.filter(item=>item.checked === false)\n        Data = newData.map((item,index)=>{\n            item.id = index;\n            return item;\n        })\n        // console.log(\"!!!!!!!!!!\",Data);\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: Data,\n\n        })\n    }\n\n    deleteItem = () =>{\n        const data = this.state.todoData;\n        const index = this.state.index;\n        let newData  = [];\n        let Data = [];\n        newData  = data.filter(item=>item.id!==index)\n        Data = newData.map((item,index)=>{\n            item.id = index;\n            return item;\n        })\n        // console.log(\"!!!!!!!!!!\",Data);\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: Data,\n        })\n    }\n\n    clearAll = ()=>{\n        const newData = [];\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: newData,\n        })\n    }\n\n    // updateTomatoTime = (item)=>{\n    //     this.setState({\n    //       Times:item,\n    //     })\n    //   }\n    \n    inlineTomatoButton = ()=>{\n        const index = this.state.index;\n        let tomatoTimes =0;\n        if (this.state.todoData[index]!==undefined)\n            tomatoTimes = this.state.todoData[index].tomatoNumber;\n        this.props.updateTomatoTimes(tomatoTimes);\n        this.setState({\n            Times:tomatoTimes,\n            inlineTag:true,\n        })\n        // this.props.updateTomatoTime(tomatoTimes);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div>\n                    <h1>To do</h1>\n                    <AddModule \n                        todoData={this.state.todoData}\n                        updateAddItem={this.updateAddItem}\n                    />\n                </div>\n                <br/>\n                {this.state.todoData.length!==0 &&\n                <div >\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                        <h3>List </h3>\n                            <ListModule \n                                todoData ={this.state.todoData}\n                                updateItemStatus = {this.updateItemStatus}\n                                index={this.state.index}\n                                updateIndexStatus={this.updateIndexStatus}\n                            />\n                        <span>\n                        <button \n                            onClick={this.deleteDoneItem}>\n                                Clean Done\n                        </button>\n                        <button \n                            style={{marginLeft: \"1rem\"}}\n                            onClick={this.clearAll}>\n                                Clear All\n                        </button>\n                        </span>\n                    </div>\n                   \n                    <div className=\"flex-large\">\n                            <EditBoard\n                                data={this.state.todoData}\n                                index={this.state.index}\n                                inlineTomato={this.props.inlineTomato}\n                                updateItemStatus={this.updateItemStatus}\n                                updateTomatoTimes={this.props.updateTomatoTimes}\n                                // updateTomatoTime={this.updateTomatoTime}\n                                deleteItem={this.deleteItem}\n                                enableTomato={this.props.enableTomato}\n                                encourageMode={this.props.encourageMode}\n                            />\n                            {!this.props.restrictMode &&\n                            <div>\n                            <label style={{marginLeft: \"1rem\"}}>\n                                Item Delete\n                            </label>\n                            <span>\n                            <button \n                                onClick={this.deleteItem}\n                                style={{marginLeft: \"1rem\"}}>\n                                    Delete\n                            </button>\n                            {this.props.inlineTomato &&\n                            <button \n                                onClick={this.inlineTomatoButton}\n                                style={{marginLeft: \"1rem\"}}>\n                                    Start Timing\n                            </button>}\n                            </span>\n                            </div>}\n                    </div> \n                   </div> \n                   \n                   {(this.props.inlineTomato&&this.props.enableTomato&&this.state.inlineTag) &&\n                   <div>\n                    <br/>\n                    <hr/>\n                        <InlineTomato\n                            Times = {this.state.Times}\n                            enableTomato={this.props.enableTomato}\n                            restrictMode={this.props.restrictMode}\n                            inlineTomato={false}\n                        />\n                   </div>}\n                   </div>}\n                   <br/>\n            </div>    \n        );\n    }\n}\n\nexport default Todo;","import React, { Component } from 'react';\n\nclass Board extends Component {\n\n    render() {\n        return (\n           <div className=\"container\">\n               <h1>Board</h1>\n               \n           </div>\n        );\n    }\n}\n\nexport default Board;","import React, { Component } from 'react';\nimport {Switch} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green} from '@material-ui/core/colors';\n\nclass Settings extends Component {\n\n    switchTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[700],\n            },\n          secondary: {\n            main: green[300],\n          },\n        },\n      });\n\n    restrictModeMethod = ()=>{\n        let restricMode = this.props.restrictMode;\n        restricMode = !restricMode;\n        this.props.updateRestricMode(restricMode);\n        this.props.updateInlineTomato(false);\n    }\n\n    enableTomatoMethod =()=>{\n        let enableTomato = this.props.enableTomato;\n        enableTomato = !enableTomato;\n        this.props.updateEnableTomato(enableTomato);\n        if(!enableTomato){\n            this.props.updateInlineTomato(false);\n        }\n    }\n\n    inlineTomatoMethod = ()=>{\n        let inlineTomato = this.props.inlineTomato;\n        inlineTomato = !inlineTomato;\n        this.props.updateInlineTomato(inlineTomato);\n    }\n\n    encourageModeMethod =()=>{\n        let encourageMode = this.props.encourageMode;\n        encourageMode = !encourageMode;\n        this.props.updateEncourageMode(encourageMode);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>Setting</h1>\n                <hr/>\n                <span>\n                    <label>Restrict Mode</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            checked={this.props.restrictMode}\n                            name=\"restrictMode\"\n                            id=\"restrictMode\"\n                            color=\"secondary\"\n                            onChange={this.restrictModeMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n                <span>\n                    <label>Enable Tomato Clock</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            checked={this.props.enableTomato}\n                            name=\"enableTomato\"\n                            id=\"enableTomato\"\n                            color=\"primary\"\n                            onChange={this.enableTomatoMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n                <span>\n                    <label>Inline Tomato Clock</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            // disabled={this.props.restrictMode}\n                            disabled={this.props.restrictMode||!(this.props.enableTomato)}\n                            checked={this.props.inlineTomato}\n                            name=\"inlineTomato\"\n                            id=\"inlineTomato\"\n                            color=\"primary\"\n                            onChange={this.inlineTomatoMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n                <span>\n                    <label>Encourage Mode</label>\n                    <ThemeProvider theme={this.switchTheme}>\n                        <Switch\n                            checked={this.props.encourageMode}\n                            name=\"encourageMode\"\n                            id=\"encourageMode\"\n                            color=\"primary\"\n                            onChange={this.encourageModeMethod}\n                        />\n                    </ThemeProvider>\n                </span>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React, { useState, useEffect } from 'react';\nimport \"./Clock.css\";\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle=()=> {\n    setIsActive(!isActive);\n  }\n\n  const reset=() =>{setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {seconds}s\n      </div> \n      <div className=\"row\">\n        <button \n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} \n            onClick={toggle}>\n                {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button \n            className=\"button\" \n            onClick={reset}>\n                Reset\n        </button>\n        <br/>\n        <br/>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;","import React, { Component } from 'react';\nimport Timer from \"./Timer\";\nimport CountDown from \"./CountDown\";\n\nclass Clock extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n               {/* <h1>Clock</h1> */}\n               <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                    <h3>Timer</h3>\n                        <Timer/>                        \n                    </div>\n                    <div className=\"flex-large\">\n                    <h3>Count Down</h3>\n                        <CountDown\n                            Times = {this.props.Times}\n                            enableTomato={this.props.enableTomato}\n                            restrictMode={this.props.restrictMode}\n                            inlineTomato={this.props.inlineTomato}\n                        />\n                    </div>\n               </div>\n               \n           </div>\n        );\n    }\n}\n\nexport default Clock;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navibar extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Link to=\"/workdash\">\n                                    To do\n                                </Link>\n                            </th>\n                            {/* <th>\n                                <Link to=\"/board\">\n                                    Board\n                                </Link>\n                            </th> */}\n                            <th>\n                                <Link to=\"/clock\">\n                                    Clock\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/settings\">\n                                    Setting\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/about\">\n                                    About\n                                </Link>\n                            </th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Navibar;","import React, { Component } from 'react';\n\nclass About extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>About</h1>\n                {/* <hr/> */}\n                <p>A React App Combiming Todo and Tomato Clock Together</p>\n                <hr/>\n                <h4>Setting</h4>\n                <label><li>Restrict Mode</li></label>\n                <p>\n                    <tr>As seen from the name, \n                    Restrict Mode will disable some functions to help you concentrate better.</tr>\n                </p>\n                <p>\n                    <li>Disable Single Item Delete Button</li>\n                    <tr>Restrict Mode will disable single delete button which will \n                    prevent you from deleting the item you added on the list.</tr>\n                    <tr>Hard tasks left on the list of no doubt make you not that happy.</tr>\n                    <tr>So, urge yourself to complete them instead of cheating yourself...</tr>\n                    <tr>Eh, at least we have taken away your delete button XD .</tr>\n                </p>\n\n                <p>\n                    <li>Disable Inline Tomato Clock</li>\n                    <tr>Restrict Mode will disable Inline Tomato Clock.</tr>\n                    <tr>Shown just down the task list, Inline Tomato Clock makes it easy to check \n                    your task with clock counting</tr>\n                    <tr>However, if you want to enjoy your concentration without any interuption.\n                    Leaving other tasks alone is a wise choice.</tr>\n                    <tr>So, why not jump to the clock page and enjoy your own time :)</tr>\n\n                </p>\n                <p>\n                    <li>Disable Pause Option of the Tomato Clock</li>\n                    <tr>Restrict Mode will disable the Pause Option of the Tomato (Count Down) Clock.</tr>\n                    <tr>In fact, according to the policy of Tomato Work Method, pause is even not allowed.</tr>\n                    <tr>So, if you sruely wanna pause, just reset and start again.</tr>\n                </p>\n\n\n                <label><li>Encourage Mode</li></label>\n                <p>\n                    <tr>If there were no bosses patroling around, </tr>\n                    <tr>everyone would be happy showing off the fact \n                    of finishing work ahead of scheduled time.</tr>\n                    <tr>To be host, I am not rich enough to store your data on the cloud \n                    without selling them to your managers.</tr>\n                    <tr>However, my coding level surely sucks, which will guarantee your privacy safety\n                     because I have no idea of storing data online.</tr>\n                    <tr>So, you should feel lucky and keep the switch on. Feel free \n                    to tap the switch if you finish your work in advance.</tr>\n                    <tr>The checkbox will turn green as encouragement.</tr>\n\n                </p>\n                <h4>To Do</h4>\n                <p>\n                    <tr>Add your item to start.</tr>\n                    <tr>Click at the task to see its propotions and edit it.</tr>\n                    <tr>You can set tomato clock time to each task use interactive tomato clock.</tr>\n                </p>\n                {/* <h4>Clock</h4> */}\n\n                <hr/>\n                <p>Designed by HYY at BUPT</p>\n                <br/>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { Switch , Route} from 'react-router-dom';\nimport Todo from \"./Component/Todo/Todo\";\nimport Board from \"./Component/Boards/Board\";\nimport Settings from \"./Component/Settings\";\nimport Clock from \"./Component/Clock/Clock\";\nimport Navibar from \"./Component/Navibar\";\nimport About from \"./Component/About\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      Times:0,\n      restrictMode:false,\n      enableTomato:true,\n      inlineTomato:true,\n      encourageMode:true,\n    }\n  }\n\n  componentDidMount(){\n    const documentEnableTomato = JSON.parse(localStorage.getItem(\"enableTomato\"));\n    const documentRestrictMode = JSON.parse(localStorage.getItem(\"restrictMode\"));\n    const documentInlineTomato = JSON.parse(localStorage.getItem(\"inlineTomato\"));\n    const documentEncourageMode = JSON.parse(localStorage.getItem(\"encourageMode\"));\n    \n    if(documentEnableTomato!==null){\n      this.setState({\n        enableTomato:documentEnableTomato,\n      })\n    }else{\n      this.setState({\n        enableTomato:true,\n      })\n    }\n\n    if(documentInlineTomato!==null){\n      this.setState({\n        inlineTomato:documentInlineTomato,\n      })\n    }else{\n      this.setState({\n        inlineTomato:true,\n      })\n    }\n\n    if(documentEncourageMode!==null){\n      this.setState({\n        encourageMode:documentEncourageMode,\n      })\n    }else{\n      this.setState({\n        encourageMode:true,\n      })\n    }\n\n    if(documentRestrictMode!==null){\n      this.setState({\n        restrictMode:documentRestrictMode,\n      })\n    }else{\n      this.setState({\n        restrictMode:false,\n      })\n    }\n  }\n\n  componentDidUpdate(prevState){\n    if(prevState.enableTomato!==this.state.enableTomato){\n        localStorage.setItem(\"enableTomato\",JSON.stringify( this.state.enableTomato));\n    }\n\n    if(prevState.restrictMode!==this.state.restrictMode){\n      localStorage.setItem(\"restrictMode\",JSON.stringify( this.state.restrictMode));\n    }\n\n    if(prevState.inlineTomato!==this.state.inlineTomato){\n      localStorage.setItem(\"inlineTomato\",JSON.stringify( this.state.inlineTomato));\n    }\n\n    if(prevState.encourageMode!==this.state.encourageMode){\n      localStorage.setItem(\"encourageMode\",JSON.stringify( this.state.encourageMode));\n    }\n}\n\n  updateTomatoTimes = (item)=>{\n    this.setState({\n      Times:item,\n    })\n  }\n\n  updateRestricMode = (item) =>{\n    this.setState({\n      restrictMode: item,\n    })\n  }\n\n  updateEnableTomato = (item) =>{\n    this.setState({\n      enableTomato:item,\n    })\n  }\n\n  updateInlineTomato = (item) =>{\n    this.setState({\n      inlineTomato:item,\n    })\n  }\n\n  updateEncourageMode =(item)=>{\n    this.setState({\n      encourageMode:item,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Navibar/>\n        <Switch>\n          <Route path=\"/workdash\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Todo\n              Times ={this.state.Times}\n              updateTomatoTimes={this.updateTomatoTimes}\n              restrictMode={this.state.restrictMode}\n              enableTomato={this.state.enableTomato}\n              inlineTomato={this.state.inlineTomato}\n              encourageMode={this.state.encourageMode}\n            />\n          </Route>\n          <Route path=\"/board\">\n            <Board/>\n          </Route>\n          <Route path=\"/clock\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Clock\n              Times ={this.state.Times}\n              enableTomato={this.state.enableTomato}\n              restrictMode={this.state.restrictMode}\n              inlineTomato={this.state.inlineTomato}\n            />\n          </Route>\n          <Route path=\"/settings\">\n            <Settings\n              restrictMode={this.state.restrictMode}\n              updateRestricMode={this.updateRestricMode}\n              enableTomato={this.state.enableTomato}\n              updateEnableTomato={this.updateEnableTomato}\n              inlineTomato={this.state.inlineTomato}\n              updateInlineTomato={this.updateInlineTomato}\n              encourageMode={this.state.encourageMode}\n              updateEncourageMode={this.updateEncourageMode}\n              />\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}