{"version":3,"sources":["Component/Todo/AddModule.js","Component/Todo/EditBoard.js","Component/Todo/ListModule.js","Component/Todo/Todo.js","Component/Boards/Board.js","Component/About.js","Component/Clock/Timer.js","Component/Clock/CountDown.js","Component/Clock/Clock.js","Component/Navibar.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["AddModule","props","addButtonHandler","title","state","updateAddItem","setState","changeHandler","event","target","name","value","htmlFor","type","id","onChange","this","onClick","Component","EditBoard","checkboxTheme","createMuiTheme","palette","primary","main","blue","secondary","green","marks","label","editChange","data","index","switchChange","propoty","editSubmit","updateItemStatus","tomatoButton","tomatoTimes","undefined","tomatoNumber","updateTomatoTimes","sliderChanged","valuetext","prevProps","prevState","checked","body","className","ThemeProvider","theme","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","max","to","Switch","color","ListModule","handleCheckboxChange","sendIndex","todoData","updateIndexStatus","rows","map","row","Checkbox","style","textDecoration","marginLeft","fontWeight","Todo","item","newItem","length","console","log","newTodoData","deleteDoneItem","Data","filter","window","confirm","deleteItem","clearAll","documentData","JSON","parse","localStorage","getItem","setItem","stringify","Board","About","Timer","useState","seconds","setSeconds","isActive","setIsActive","useEffect","interval","setInterval","clearInterval","CountDown","time","counter","setCounter","isWork","setisWork","Times","setTimes","minutes","Math","floor","alert","ceil","Clock","Navibar","App","path","rel","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.74e79f49.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass AddModule extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            title:\"\",\n        }\n    }\n\n    addButtonHandler=()=>{\n        const {title} = this.state;\n        if(title!=='')\n        this.props.updateAddItem(title);\n        // console.log(\"addButton\")\n        this.setState({\n            title:\"\",\n        })\n    }\n\n    changeHandler =(event)=>{\n        const {name, value} = event.target;\n        this.setState({\n            [name]:value,\n        })\n        \n    }\n\n    render() {\n        // const data = [...this.state.todoData];\n        return (\n            <form>\n                <label htmlFor=\"title\">\n                    <h5>What's Your Plan Today</h5>\n                </label>\n                <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    onChange={this.changeHandler}\n                    value={this.state.title}\n                />\n                <input \n                    type=\"button\" \n                    value=\"Add\"\n                    onClick={this.addButtonHandler}/>\n            </form>\n        );\n    }\n}\n\nexport default AddModule;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {Switch, Slider} from \"@material-ui/core\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue, green} from '@material-ui/core/colors';\n\n\nclass EditBoard extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            data:this.props.data,\n        }\n\n    }\n\n    checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[700],\n            },\n          secondary: {\n            main: green[300],\n          },\n        },\n      });\n\n      marks = [\n        {\n            value:0,\n            label:0,\n        },\n        {\n            value:5,\n            label:5,\n        }\n    ]\n\n    componentDidMount(){\n        this.setState({\n            data:this.props.data,\n    \n        })\n    }\n    \n    componentDidUpdate(prevProps,prevState){\n        if(prevProps.data !== this.props.data){\n            this.setState({\n                data:this.props.data,\n            })\n        }\n        \n    }\n\n    editChange=(event)=>{\n        const {name,value} = event.target;\n        let {data} = this.state;\n        data[this.props.index][name] = value;\n        this.setState({\n            data: data,\n        })\n    }\n\n    switchChange = ()=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].propoty = !data[index].propoty\n        this.setState({\n            data: data,\n        })\n    }\n\n    editSubmit=()=>{\n        // if(window.confirm(\"Sure to Change?\"))\n            this.props.updateItemStatus(this.state.data);\n    }\n\n    tomatoButton = ()=>{\n        const index = this.props.index;\n        let tomatoTimes =0;\n        if (this.props.data[index]!==undefined)\n            tomatoTimes = this.props.data[index].tomatoNumber;\n        this.props.updateTomatoTimes(tomatoTimes);\n    }\n\n    sliderChanged =(event,value)=>{\n        let {data} = this.state;\n        const index = this.props.index;\n        data[index].tomatoNumber = value;\n        this.setState({\n            data: data,\n        })\n    }\n\n    valuetext = (value)=> {\n        return `${value} Tomatos`;\n      }\n\n      \n\n    render() {\n        const index = this.props.index;\n        let data = {};\n        if (this.props.data[index]!==undefined)\n             data = this.props.data[index];\n        else data = {\n                id:0,\n                checked:false,\n                title:'',\n                tomatoNumber:0,\n                body:\"\",\n                propoty:false,\n        }\n        // console.log(data.title)\n        return (\n            \n            <div className=\"container\">\n                <h3>Edit</h3>\n                <form>\n                    <label>Title</label>\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        value={data.title}\n                        onChange={this.editChange}\n                    />   \n                    \n                    <label>Tomato Time {data.tomatoNumber!==0?data.tomatoNumber:null}</label>\n                    <span>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Slider \n                        value={data.tomatoNumber}\n                        getAriaValueText={this.valuetext}\n                        aria-labelledby=\"discrete-slider\"\n                        valueLabelDisplay=\"auto\"\n                        step={1}\n                        marks={this.marks}\n                        // valueLabelDisplay=\"on\"\n                        min={0}\n                        max={5}\n                        name=\"tomatoNumber\"\n                        id='tomatoNumber'\n                        onChange={this.sliderChanged}\n                    />\n                    </ThemeProvider>\n                    <Link to=\"/clock\">\n                    <button onClick={this.tomatoButton}>\n                        Start Timing\n                    </button>   \n                    </Link>\n                    \n                    </span>\n\n                    <label>Important</label>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                    <Switch\n                        checked={data.propoty}\n                        name=\"propoty\"\n                        id=\"propoty\"\n                        color=\"primary\"\n                        onChange={this.switchChange}\n                        />\n                    </ThemeProvider>\n                    <label>Description</label>\n                    <textarea\n                        type=\"text\"\n                        id=\"description\"\n                        name=\"body\"\n                        value={data.body}\n                        onChange={this.editChange}\n                    />   \n                    <span>\n                        <input\n                            type=\"button\"\n                            value=\"Save\"\n                            onClick={this.editSubmit}\n                        />\n                        {/* <button \n                            onClick={this.props.deleteItem}\n                            style={{marginLeft: \"1rem\"}}>\n                                Delete\n                        </button> */}\n                    </span>\n        \n                </form>\n            </div>     \n        );\n    \n    }\n}\n\nexport default EditBoard;","import React, { Component } from 'react';\nimport { Checkbox } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { blue } from '@material-ui/core/colors';\n\n// import Checkbox from \"./CheckBox\";\n\n\n\nclass ListModule extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state={\n            data:this.props.todoData,\n            index:-1,\n            // checked:false,\n        }\n    }\n\n    checkboxTheme = createMuiTheme({\n        palette: {\n          primary:{\n            main: blue[300],\n            },\n          secondary: {\n            main: blue[700],\n          },\n        },\n      });\n\n    componentDidMount(){\n        this.setState({\n            // data:this.props.todoData,\n            index:this.props.index,\n        })\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.todoData!==this.props.todoData){\n            this.setState({\n                data: this.props.todoData,\n            })\n        }\n        if(prevState.data!==this.state.data){\n            this.props.updateItemStatus(this.state.data);\n        }\n        if(prevState.index!==this.state.index){\n            this.props.updateIndexStatus(this.state.index)\n        }\n    }\n\n    handleCheckboxChange = (index) => {\n        let data = [...this.state.data];\n        data[index].checked = !data[index].checked;\n        this.setState({ \n            data: data,\n        })\n      }\n\n    sendIndex = (index) =>{\n        this.setState({\n            index: index,\n        })\n    }\n\n    render() {\n        const data = this.props.todoData;\n        // console.log(data);\n        // console.log(\"now map\")\n        const rows = data.map((row, index)=>{\n            // console.log(row,\"_____________________\")\n            // console.log(\"Checked\")\n            // console.log(row.checked)\n            return(\n                <tr key={index}>\n                    <div>\n                    <ThemeProvider theme={this.checkboxTheme}>\n                        <Checkbox \n                            checked={row.checked}\n                            color={row.propoty?\"secondary\":\"primary\"}\n                            onClick={()=>this.handleCheckboxChange(index)} \n                            />\n                        </ThemeProvider>\n                        <span\n                            onClick={()=>this.sendIndex(index)}\n                            style={{ textDecoration: row.checked ? \"line-through\" : null,\n                            marginLeft:16, fontWeight: row.propoty ? \"bold\" : null,\n                                }}\n                        >\n                               {row.title}\n                        </span>\n                        <span>\n\n                        </span>\n                    </div>\n                </tr>\n            )\n        })\n        return(\n            <div className=\"container\">\n            <table>\n                <tbody>{rows}</tbody>\n            </table>\n            </div>\n        )\n        \n    }\n}\n\nexport default ListModule;","import React, { Component } from 'react';\n\nimport AddModule from \"./AddModule\";\nimport EditBoard from './EditBoard';\nimport ListModule from \"./ListModule\";\n\nclass Todo extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            index: 0,\n          \n            todoData:[\n            {\n                id:0,\n                checked:true,\n                title:\"Try to work 25h a day\",\n                tomatoNumber:0,\n                body:\"\",\n                propoty:false,\n            },\n            {\n                id:1,\n                checked:false,\n                title:\"Homework\",\n                tomatoNumber:3,\n                body:\"I have to work\",\n                propoty:true,\n            },\n            {\n                id:2,\n                checked:true,\n                title:\"Design a chip\",\n                tomatoNumber:3,\n                body:\"I have to work\",\n                propoty:true, \n            },\n            {\n                id:3,\n                checked:false,\n                title:\"Sleep\",\n                tomatoNumber:0,\n                body:'',\n                propoty:false,\n            },\n            {\n                id:4,\n                checked:false,\n                title:\"Eat\",\n                tomatoNumber:10,\n                body:\"\",\n                propoty:false,\n            }\n        ]}\n    }\n\n                       \ncomponentDidMount(){\n    const documentData = JSON.parse(localStorage.getItem(\"todo\"));\n    if (documentData !== null){\n      this.setState({\n        todoData:documentData,\n      })\n    }else{\n      this.setState({\n        index:0,\n        todoData:[\n            {\n                id:0,\n                checked:true,\n                title:\"Try to work 25h a day\",\n                tomatoNumber:0,\n                body:\"\",\n                propoty:false,\n            },\n            {\n                id:1,\n                checked:true,\n                title:\"Homework\",\n                tomatoNumber:3,\n                body:\"I have to work\",\n                propoty:true,\n            },\n            {\n                id:2,\n                checked:false,\n                title:\"Design a chip\",\n                tomatoNumber:3,\n                body:\"I have to work\",\n                propoty:true, \n            }\n        ]\n      })\n    }\n    }\n\n    componentDidUpdate(prevState){\n        if(prevState.todoData!==this.state.todoData){\n            localStorage.setItem(\"todo\",JSON.stringify( this.state.todoData));\n        }\n    }\n\n    updateAddItem =(item)=>{\n        const {todoData} = this.state; \n        let newId = todoData.length;\n        const newItem = {\n            id:newId,\n            checked:false,\n            title:item,\n            tomatoNumber:0,\n            body:\"\",\n            propoty:false,\n        }\n        console.log(newItem)\n        const newTodoData =  [...todoData,newItem];\n        this.setState({\n            todoData: newTodoData,\n        })\n    }\n\n    updateItemStatus = item => {\n        this.setState({\n            todoData:item,\n        })\n    }\n\n    updateIndexStatus = index =>{\n        this.setState({\n            index: index,\n        })\n    }\n\n    deleteDoneItem = () =>{\n        const data = this.state.todoData;\n        let newData  = [];\n        let Data = [];\n        newData = data.filter(item=>item.checked === false)\n        Data = newData.map((item,index)=>{\n            item.id = index;\n            return item;\n        })\n        // console.log(\"!!!!!!!!!!\",Data);\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: Data,\n\n        })\n    }\n\n    deleteItem = () =>{\n        const data = this.state.todoData;\n        const index = this.state.index;\n        let newData  = [];\n        let Data = [];\n        newData  = data.filter(item=>item.id!==index)\n        Data = newData.map((item,index)=>{\n            item.id = index;\n            return item;\n        })\n        // console.log(\"!!!!!!!!!!\",Data);\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: Data,\n        })\n    }\n\n    clearAll = ()=>{\n        const newData = [];\n        if(window.confirm(\"Sure to Change?\"))\n        this.setState({\n            todoData: newData,\n        })\n    }\n\n    \n\n    render() {\n        return (\n            <div className=\"container\">\n                <div>\n                    <h1>To do</h1>\n                    <AddModule \n                        todoData={this.state.todoData}\n                        updateAddItem={this.updateAddItem}\n                    />\n                </div>\n                <br/>\n                {this.state.todoData.length!==0 &&\n                <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                        <h3>List </h3>\n                            <ListModule \n                                todoData ={this.state.todoData}\n                                updateItemStatus = {this.updateItemStatus}\n                                index={this.state.index}\n                                updateIndexStatus={this.updateIndexStatus}\n                            />\n                        <span>\n                        <button \n                            onClick={this.deleteDoneItem}>\n                                Clean Done\n                        </button>\n                        <button \n                            style={{marginLeft: \"1rem\"}}\n                            onClick={this.clearAll}>\n                                Clear All\n                        </button>\n                        </span>\n                    </div>\n                   \n                    <div className=\"flex-large\">\n                            <EditBoard\n                                data={this.state.todoData}\n                                index={this.state.index}\n                                updateItemStatus={this.updateItemStatus}\n                                updateTomatoTimes={this.props.updateTomatoTimes}\n                                deleteItem={this.deleteItem}\n                            />\n                            <label style={{marginLeft: \"1rem\"}}>\n                                Item Delete\n                            </label>\n                            <button \n                                onClick={this.deleteItem}\n                                style={{marginLeft: \"1rem\"}}>\n                                    Delete\n                            </button>\n                    </div> \n                   </div> }\n                   <br/>\n            </div>    \n        );\n    }\n}\n\nexport default Todo;","import React, { Component } from 'react';\n\nclass Board extends Component {\n\n    render() {\n        return (\n           <div className=\"container\">\n               <h1>Board</h1>\n               \n           </div>\n        );\n    }\n}\n\nexport default Board;","import React, { Component } from 'react';\n\nclass About extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <h1>About</h1>\n            </div>\n        );\n    }\n}\n\nexport default About;","import React, { useState, useEffect } from 'react';\nimport \"./Clock.css\";\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  const toggle=()=> {\n    setIsActive(!isActive);\n  }\n\n  const reset=() =>{setSeconds(0);\n    setIsActive(false);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setSeconds(seconds => seconds + 1);\n      }, 1000);\n    } else if (!isActive && seconds !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, seconds]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {seconds}s\n      </div> \n      <div className=\"row\">\n        <button \n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} \n            onClick={toggle}>\n                {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button \n            className=\"button\" \n            onClick={reset}>\n                Reset\n        </button>\n        <br/>\n        <br/>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;","import React from 'react';\nimport { useState, useEffect } from 'react';\n// import {Switch} from \"@material-ui/core\";\nimport \"./Clock.css\";\nconst CountDown=(props) =>{\n    let time = 1500;\n    let freeTime = 300;\n    const [counter, setCounter] = useState(time);\n    const [isActive, setIsActive] = useState(false);\n    const [isWork, setisWork] = useState(true);\n    const [Times, setTimes] = useState(props.Times);\n    // const [tomatoTag, setTomatoTag] = useState(true)\n\n    useEffect(() => {\n      let interval = null;\n      if (isActive) {\n        interval = setInterval(() => {\n          setCounter(counter => {\n            if(counter > 0)\n              return counter -1;\n            else \n              return 0;\n          });\n        }, 1000);\n      } else if (!isActive && counter !== 0) {\n        clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }, [isActive, counter]);\n    \n    const nextMode = () =>{\n      setIsActive(false);\n      setisWork(!isWork);\n      setCounter(isWork?freeTime:time);\n      setTimes(Times => Times - 0.5);\n    }\n\n    const toggle = () => {\n        setIsActive(!isActive);\n        \n      }\n    \n    const reset = () => {\n        setCounter(isWork?time:freeTime);\n        setIsActive(false);\n      }\n    \n    // const tomatoTagFunction = () =>{\n    //   setTomatoTag(!tomatoTag);\n    // }\n  \n    const minutes = Math.floor(counter / 60);\n    const seconds = counter % 60;\n\n    if(minutes===0 && seconds===0 && isWork===true)\n      window.alert(\"Well Done, Take a Break :)\")\n    \n    \n    if(minutes===0 && seconds===0 && isWork===false)\n      window.alert(\"Back to Work XD\")\n\n  return (\n    <div className=\"app\">\n      <div className=\"time\">\n        {minutes}:{seconds}\n      </div> \n      <div className=\"row\">\n        <button \n            className={`button button-primary button-primary-${isActive ? 'active' : 'inactive'}`} \n            onClick={toggle}>\n                {isActive ? 'Pause' : 'Start'}\n        </button>\n        <button \n            className=\"button\" \n            onClick={reset}>\n                Reset\n        </button>\n        <button\n          className=\"button\"\n          onClick={nextMode}>\n            Next\n        </button>\n      </div>\n      \n      {/* <Switch \n        checked={tomatoTag}\n        name=\"tomatoTag\"\n        id=\"tomatoTag\"\n        color=\"primary\"\n        onChange={tomatoTagFunction}\n      /> */}\n      {Times<=0?\n      <div className='row'>\n        All Done\n      </div>:\n      <div className=\"row\">\n        {Math.ceil(Times)} Times Left\n      </div>}\n\n      <br/>\n    </div>\n  );\n}\nexport default CountDown\n","import React, { Component } from 'react';\nimport Timer from \"./Timer\";\nimport CountDown from \"./CountDown\";\n\nclass Clock extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n               {/* <h1>Clock</h1> */}\n               <div className=\"flex-row\">\n                    <div className=\"flex-large\">\n                    <h3>Timer</h3>\n                        <Timer/>                        \n                    </div>\n                    <div className=\"flex-large\">\n                    <h3>Count Down</h3>\n                        <CountDown\n                            Times = {this.props.Times}\n                        />\n                    </div>\n               </div>\n               \n           </div>\n        );\n    }\n}\n\nexport default Clock;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navibar extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>\n                                <Link to=\"/workdash\">\n                                    To do\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/board\">\n                                    Board\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/clock\">\n                                    Clock\n                                </Link>\n                            </th>\n                            <th>\n                                <Link to=\"/about\">\n                                    About\n                                </Link>\n                            </th>\n                        </tr>\n                    </thead>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Navibar;","import React, { Component } from 'react';\nimport { Switch , Route} from 'react-router-dom';\nimport Todo from \"./Component/Todo/Todo\";\nimport Board from \"./Component/Boards/Board\";\nimport About from \"./Component/About\";\nimport Clock from \"./Component/Clock/Clock\";\nimport Navibar from \"./Component/Navibar\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      Times:0,\n    }\n  }\n\n  updateTomatoTimes = (item)=>{\n    this.setState({\n      Times:item,\n    })\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Navibar/>\n        <Switch>\n          <Route path=\"/workdash\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Todo\n              updateTomatoTimes={this.updateTomatoTimes}\n            />\n          </Route>\n          <Route path=\"/board\">\n            <Board/>\n          </Route>\n          <Route path=\"/clock\" target=\"_blank\" rel=\"noopener noreferrer\">\n            <Clock\n              Times ={this.state.Times}\n            />\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}